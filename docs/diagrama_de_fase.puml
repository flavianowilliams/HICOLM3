@startuml
package main{
class Constants{
    - pi: double precision
    - kb: double precision
    - n0: double precision
    - kelect: double precision
    - mconv: double precision
    - aconv: double precision
    - hcconv: double precision
    - elconv: double precision
    - keconv: double precision
    - econv: double precision
    - rconv: double precision
    - pconv: double precision
    - tconv: double precision
    + constants_prepare()
    + get_pi()
    + get_kb()
    + get_n0()
    + get_kelect()
    + get_mconv()
    + get_aconv()
    + get_hcconv()
    + get_elconv()
    + get_keconv()
    + get_econv()
    + get_rconv()
    + get_pconv()
    + get_tconv()
    + get_teconv()
    + get_kconv()
}
class Structure{
    - nmol: integer
    - natom: integer
    - system_init()
    + sites()
    + molecules()
}
Constants <|- Structure
class Molecule{
    - nmol: integer
    - natom: integer
    - system_init()
    + sites()
    + molecules()
}
Structure <|- Molecule
class System{
    - qtotal: double precision
    + set_qtotal()
    + get_qtotal()
}
Molecule --o System
class Zmatrix{
    - zmatrix_tol: double precision
    - zmatrix_init()
    + set_bonds()
    + get_bonds()
}
Molecule <|- Zmatrix
class ForceField{
    - nspcs: integer
    - nvdw: integer
    + itorscnt[]: integer
    + molitors[]: integer
    - coulop: character
    - fscsalpha: double precision
    + parbnd[]: double precision
    + parbend[]: double precision
    + paritors[]: double precision
    + parvdw[]: double precision
    + spcs[]: character
    + spcvdw[]: character
    + tbonds[]: character
    + tbends[]: character
    + ttors[]: character
    + titors[]: character
    + tvdw[]: character
    - forcefield_init()
    + set_spcs()
    + set_nspcs()
    + get_nspcs()
    + set_parbnd()
    + set_parbend()
    + set_partors()
    + set_paritors()
    + set_extra_parbnd()
    + set_extra_parbend()
    + set_extra_partors()
    + set_extra_parvdw()
    + set_parvdw()
    + set_nvdw()
    + get_nvdw()
    + set_fscsalpha()
    + get_fscsalpha()
    + set_coulop()
    + get_coulop()
    + set_coulop2()
}
Zmatrix <|- ForceField
class Amber{
    + prms_bonds: xxxx
    + set_amber()
}
ForceField -* Amber
class Prepare{
    + check()
    + print_sys()
    + print_top()
    + print_out()
}
ForceField <|-- Prepare
}
' Fim do pacote main
package md {
class Input{
    - nstep: integer
    - nrelax: integer
}
Input ---|> ForceField
class Atoms{
    + zat: integer
    + set_zat()
}
Atoms -|> Input
class NeighbourList{
    - verlchk: integer
    + ilist[]: integer
    + nlist[]: integer
    + neighbour_prepare()
    + verlet_list()
    + set_verlchk()
    + get_verlchk()
}
NeighbourList -|> Atoms
class Interaction{
    - enpot: double precision
    - virtot: double precision
    - encorr: double precision
    - vircorr: double precision
    - fbi[]: double precision
    - fbj[]: double precision
    - fbk[]: double precision
    - fbl[]: double precision
    + interaction_init()
    + set_forcefield()
    + set_intraff()
    + set_interff()
    + set_force2()
    + set_force3()
    + set_force4()
    + set_force()
    + set_enpot()
    + get_enpot()
    + set_virtot()
    + get_virtot()
    + set_vdwcorr()
    + get_encorr()
    + get_vircorr()
}
Interaction -|> NeighbourList
class Thermodynamics{
    - temperature: double precision
    - pressure: double precision
}
Thermodynamics -|> Interaction
class VanderWaals{
    - envdw: double precision
}
Interaction <|-- VanderWaals
class Coulomb{
    - encoul: double precision
}
Interaction <|-- Coulomb
class Bonds{
    - enbond: double precision
}
Interaction <|-- Bonds
class Angles{
    - enbend: double precision
}
Interaction <|-- Angles
class Dihedrals{
    - entors: double precision
}
Interaction <|-- Dihedrals
class Ensemble{
    + set_nve()
}
Ensemble <|- Thermodynamics
class MolecularDynamics{
    - time: double precision   
}
MolecularDynamics <|- Ensemble
}
package opt {
class Interopt{
    - d1bond: double precision
    - d2bond: double precision
    + set_bondopt()
    + set_vanderwaals()
    + set_coulomb()
    + get_d1bond()
    + get_d2bond()
}
Interopt --|> NeighbourList
class GradientDescent{
    - nmatrix: integer
    - lsearch: double precision
    - enpot: double precision
    - maxforce: double precision
    + res[]: double precision
    + hess[]: double precision
    + gd_init()
    + set_loop()
    + set_coulomb()
    + set_residue()
    + set_hessian()
    + set_nmatrix()
    + get_nmatrix()
    + set_lsearch()
    + get_lsearch()
    + set_enpot()
    + get_enpot()
    + set_maxforce()
    + get_maxforce()
}
GradientDescent -|> Interopt
class Optimize{
    + check()
    + print()
    + convert_units()
    + set_canonicalvariables()
    + print_geometry()
    + print_dataframes()
}
Optimize -|> GradientDescent
}
@enduml
